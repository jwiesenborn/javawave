<!DOCTYPE html>
<html lang="en">
<head>
  <title>WimpyCat</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <style>
    /* Set height of the grid so .sidenav can be 100% (adjust if needed) */
    .row.content {height: 720px}
    
    /* Set gray background color and 100% height */
    .sidenav {
      background-color: #f1f1f1;
      height: 100%;
    }
    
    /* Set black background color, white text and some padding */
    footer {
      background-color: #555;
      color: white;
      padding: 15px;
    }
    
    /* On small screens, set height to 'auto' for sidenav and grid */
    @media screen and (max-width: 767px) {
      .sidenav {
        height: auto;
        padding: 15px;
      }
      .row.content {height: auto;} 
    }
    
}
  </style>
</head>
<body>

<div class="container-fluid">
  <div class="row content">
    <div class="col-sm-3 sidenav">
      <h4>WimpyCat: 8-bit Music Player</h4>
      <ul class="nav nav-pills nav-stacked">
        <li><a href="index.htm">Home</a></li>
        <li class="active"><a href="theory.htm">Hypothesis</a></li>
        <li><a href="program.htm">Example Program</a></li>
        <li><a href="harmony.htm">Harmonic Computation</a></li>
        <li><a href="frequency.htm">The Frequency Equation</a></li>
        <li><a href="triad.htm">A Triad</a></li>
        <li><a href="timbre.htm">Wave Graph</a></li>
        <li><a href="tone.htm">Tone</a></li>
        <li><a href="sequences.htm">Sequences</a></li>
        <li><a href="wave.htm">The WAV format</a></li>
        <li><a href="offsets.htm">Offsets (Sequences Part 2)</a></li>
        <li><a href="musicxml.htm">MusicXML</a></li>
        <li><a href="synthesis.htm">Synthesis</a></li>
        <li><a href="a_sigh.htm">A Sigh</a></li>
        <li><a href="2019-05-26.htm">Streaming</a></li>
        <li><a href="player.htm">Player</a></li>
      </ul><br>
    </div>

    <div class="col-sm-9">
      <h4><small>HYPOTHESIS</small></h4>
      <hr>
      <h3>The Theory of Computer Music</h3>
      <h5><span class="glyphicon glyphicon-time"></span> Post by Jesse</h5>
      <h4>What is computer music?</h4>
      <p>Digital speakers play sound through an oscillator that rotates with electrical current. The speaker regulates this current from a stream of bits that it receives from the computer. As the computer sends this digital signal to the speaker then the oscillator rotates accordingly. Much like the pin sitting in the groove on a spinning LP record, the rotation of this oscillator creates sound.</p>
      <h4>Sample rate</h4>
      <p>In contrast with continuous analog signals, digital signals are a discrete sequence of samples. Each sample represents a tiny slice of sound correlating with the oscillator's position at one time. The oscillator must rotate at the same speed as real sound waves to work, between 20 to 20,000 times per second. Digital audio systems sample at a rate of about 44,100 times per second to accommodate the range of human hearing.</p>
      <h4>Bit depth</h4>
      <p>Each digital sample has a range of possible values called its bit depth. Bit depth is kind of like the number of pixels in a photograph. A greater bit depth means a greater resolution of the audio slices. The nature of computer architecture makes this range span powers of two. For example, a CD track has a bit depth of 16 bits per sample, giving each sample a range of 2<sup>16</sup> or 65,536 values.</p>
      <h4>Parallel to Calculus</h4>
      <p>A set of digital samples put together in sequence closely approximates a sound wave in the real world. As signal rates and bit depths increase, so does the quality of the sound represented by the signal. As their sample rates and bit depths approach infinity, digital signals can model any and every sound that can possibly exist. This piecewise manner that digital signals model analog signals bears remarkable resemblance to the Fundamental Theorem of Calculus.</p>
    </div>
  </div>
</div>

<footer class="container-fluid">
  <p>Jesse Wiesenborn | <a href="https://github.com/jwiesenborn/javawave">GitHub</a></p>
</footer>

</body>
</html>